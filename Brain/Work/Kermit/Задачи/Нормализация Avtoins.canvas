{
	"nodes":[
		{"id":"de8538a584524b72","type":"text","text":"## Сделать таблицу с овнерами\n\nЭто нужно чтобы оптимизировано получать список всех владельцев машины\n\nВ таблице должны быть поля:\n- veichle_id\n- personal_id\n- Дата дата записи когда владел - чтобы можно было понять кто последний владелец\n\nПосле формирования таблицы нужно ее использовать в коде\n**Обязательно прописать тесты для репозитория** \n\nЗапрос на получение всех владельцев по айди машины\n\n","x":-100,"y":-600,"width":480,"height":430},
		{"id":"63f5219515d9f915","type":"text","text":"Что нужно сделать\n","x":-640,"y":-70,"width":250,"height":70},
		{"id":"109cf2ea9ec109c9","type":"text","text":"##  Сделать таблицу с драйверами\n","x":-100,"y":-70,"width":440,"height":350},
		{"id":"438df070fbfd047e","type":"text","text":"## Время выполнения","x":-600,"y":661,"width":320,"height":99},
		{"id":"7e01a58d2c416042","type":"text","text":"Total getDetailByUserId: **16.888s**","x":-180,"y":460,"width":250,"height":99},
		{"id":"cb575790933d0114","type":"text","text":"getMarkModelByVin: **461.198ms**","x":180,"y":381,"width":250,"height":79},
		{"id":"b78a87ba3182fe75","type":"text","text":"getAllOwnersByVin from user detail: **15.682s**","x":180,"y":561,"width":250,"height":100},
		{"id":"68f56370b7d9402c","type":"text","text":"Нужно сделать таблицу в которую можно будет обратится и получить айди всех юзеров а потом для каждого уже получить деталку\n\n**Чтобы быстро работало** нужно чтобы поиск был по числовому индексу\n\nНапример:\n","x":560,"y":532,"width":250,"height":228},
		{"id":"eb7e5b4e8f98a5d0","type":"text","text":"**Овнеры по вин номеру**\n```\n WITH vehicle_cte AS (\n    SELECT vehicle_rec_id\n    FROM vehicle\n    WHERE vin = 'JT121LK1100020401'\n),\ncar_owners_cte AS (\n    SELECT pi.personal_info_id\n    FROM personal_info pi\n    JOIN subject_osago so ON so.subj_hash = pi.subj_hash\n    JOIN policy_subj_info psi ON psi.subj_osago_rec_id = so.subj_osago_rec_id\n    WHERE psi.vehicle_rec_id IN (SELECT vehicle_rec_id FROM vehicle_cte)\n    AND is_car_owner = 1\n),\ndocuments_cte AS (\n    SELECT\n        pi.personal_info_id,\n        ARRAY_AGG(\n            jsonb_build_object(\n                'doc_serial', sd.doc_serial,\n                'doc_number', sd.doc_number,\n                'date_from', sd.date_from,\n                'doc_type', dt.doc_type\n            )\n        ) AS documents\n    FROM personal_info pi\n    JOIN subject_osago so ON pi.subj_hash = so.subj_hash\n    JOIN subj_doc sd ON sd.doc_rec_id = so.subj_osago_doc_rec_id\n    LEFT JOIN public.doc_type dt ON sd.doc_type_id = dt.doc_type_id\n    WHERE pi.personal_info_id IN (SELECT personal_info_id FROM car_owners_cte)\n    GROUP BY pi.personal_info_id\n)\nSELECT DISTINCT\n    pi.last_name as lastname,\n    pi.first_name as firstname,\n    pi.middle_names as patronymic,\n    pi.birth_date as dob,\n    pi.personal_info_id,\n    pi.create_date,\n    COALESCE(docs.documents, ARRAY[]::jsonb[]) AS documents\nFROM personal_info pi\nLEFT JOIN documents_cte docs ON pi.personal_info_id = docs.personal_info_id\nWHERE pi.personal_info_id IN (SELECT personal_info_id FROM car_owners_cte);\n```\n","x":960,"y":691,"width":250,"height":295},
		{"id":"6069e71d4f720a33","type":"text","text":"## Как используетсся таблица policy_subj_info с 3 млрд строк\n\n- Получение овнеров\n- Получение драйверов\n\nЕсли сделать аналог этой таблицы но со связью напрямую с человеком то получится оптимизировать получение овнеров и деталок юзера\n\n\n","x":1040,"y":176,"width":425,"height":334},
		{"id":"4064e1b5221b03b3","type":"text","text":"### Проверка скорости получения нескольких юзеров с докумнтами например с 1000 айдишками\n\n**Получение 100 юзеров = 8мс**\n```\n\nexplain analyze WITH user_docs AS (  \n    SELECT  \n        pi.personal_info_id,  \n        ARRAY_AGG(  \n            jsonb_build_object(  \n                'doc_serial', sd.doc_serial,  \n                'doc_number', sd.doc_number,  \n                'date_from', sd.date_from,  \n                'doc_type', dt.doc_type  \n            )  \n        ) AS documents  \n    FROM personal_info pi  \n    JOIN subject_osago so ON pi.subj_hash = so.subj_hash  \n    JOIN subj_doc sd ON sd.doc_rec_id = so.subj_osago_doc_rec_id  \n    LEFT JOIN public.doc_type dt ON sd.doc_type_id = dt.doc_type_id  \n    WHERE pi.personal_info_id = ANY(ARRAY[931334,726612])  \n    GROUP BY pi.personal_info_id  \n)  \nSELECT  \n    pi.personal_info_id as id,  \n    pi.first_name as first_name,  \n    pi.last_name as lastname,  \n    pi.middle_names as patronymic,  \n    pi.birth_date as dob,  \n    COALESCE(docs.documents, ARRAY[]::jsonb[]) AS documents  \nFROM personal_info pi  \nLEFT JOIN user_docs docs ON pi.personal_info_id = docs.personal_info_id  \nWHERE pi.personal_info_id = ANY(ARRAY[931334,726612]);\n```","x":1560,"y":1040,"width":517,"height":552,"color":"#33c71f"},
		{"id":"3fbf59659a54d33f","type":"text","text":"Связующая таблица человека и policy_subj_info\n\n**Поля:**\n- personal_info_id\n- vin - ро нему будем определять\n- policy_subj_info_id = вдруг понадобится\n- is_car_owner = 1\n- is_car_driver = 1\n- create_date есть в табл personal_info\n\nВариант сделать просто связь записи в personal_info и policy_subj_info\n\nИ потом уже напрямую ","x":1893,"y":328,"width":367,"height":532},
		{"id":"0dabfce3bfa0b1b0","type":"text","text":"## Реализация\n\nПолучить список уникальных машин по вин номеру\n\nЕсли делать связку по вин номеру то нельзя будет получить список айди *vehicle_rec_id* \n\nИз этого следует что нужно делать таблицу соотетствий для каждой таблицы\n\nПроцес как в идеале буду делать запрос на получение всех овнеров и драйверов\n\n1. Для вин номера машины нужно получить список всех овнеров и драйверов тоесть там должен быть personal_id. Условие должно быть is_car_owner = 1\n2. Для каждого personal_id получаем деталку\n\n\nИз этого получается что нужно:\n1. Получить список вин номеров\n2. Питоновским скриптом для каждого получить список строк где он указан как водитель\n3. Сохранить значения всех полей\n4. \n","x":2360,"y":328,"width":367,"height":532},
		{"id":"86f5318955b54594","type":"text","text":"Что если пройтись по Таблице policy_subj_info и для каждой строки получить соответствие ","x":2727,"y":1060,"width":250,"height":146},
		{"id":"5d7455cf3398b08e","type":"text","text":"Связующая таблица для машин и для юзеров","x":3220,"y":1103,"width":250,"height":60},
		{"id":"7f75b04eaa851084","type":"text","text":"Будет 2 таблицы:\n1. car_owners: \npersonal_info_id,\nvin,\nlicence_plate?\n3. car_drivers\n\nКогда нужно будет то по вину мы получаем всех владельцев","x":2825,"y":-160,"width":520,"height":434},
		{"id":"0b30e1faa23d51e9","type":"text","text":"# Проблема\nВремя выполнения скрипта по овнерам примерно 1 млн в сутки что очень медленно. На всю базу уйдет около 3 месяцев","x":2877,"y":523,"width":343,"height":237,"color":"1"},
		{"id":"242c37178ca3dc48","type":"text","text":"**Какие варианты**\n\n1. Оставить как есть - да для таких случаев будет медленее работать,\n2. Сделать таблицу где сохранить  людей которые владели многими машинами и дальше их просто пропускать. Нужно проверить сколько таких людей есть\n3. \n","x":3345,"y":386,"width":695,"height":474},
		{"id":"0028cd2829dcbada","type":"text","text":"# Таблица с инфой про машины\n\n1. Получить список уникальных вин номеров ()\n2. пройтись по каждому и если он валидный получить инфу о машине записать ее в файл\n *Получать по 10 штук за раз*\n4. Занести файл в бд\n5. Сделать код чтобы использовал новую таблицу","x":-680,"y":-1640,"width":478,"height":378},
		{"id":"d51cd5c1ff16fedb","type":"text","text":"**Таблица**\n\n* mark\n* model\n* mark_model_other\n* vin\n* plate_number\n* body_number\n* ","x":-140,"y":-1960,"width":250,"height":320},
		{"id":"fd4dffac52cc8abc","x":-100,"y":-1540,"width":250,"height":240,"color":"#34b11b","type":"text","text":"**Сделал Скрипт**\n\nПроблема в скорости, чтобы все обработать нужно 44 дня\n\nУточнить у Назарбека за многопоточность, и как он запускает скрипты у себя, как ускоряет"}
	],
	"edges":[
		{"id":"f4b4f7f068b0b842","fromNode":"63f5219515d9f915","fromSide":"top","toNode":"de8538a584524b72","toSide":"left"},
		{"id":"cc17c2f25a1b92f2","fromNode":"63f5219515d9f915","fromSide":"right","toNode":"109cf2ea9ec109c9","toSide":"left"},
		{"id":"c47e6fad932a0590","fromNode":"438df070fbfd047e","fromSide":"top","toNode":"7e01a58d2c416042","toSide":"left"},
		{"id":"bd347d4805f8e8c3","fromNode":"7e01a58d2c416042","fromSide":"right","toNode":"cb575790933d0114","toSide":"left"},
		{"id":"1cdc577d0d3819bc","fromNode":"7e01a58d2c416042","fromSide":"right","toNode":"b78a87ba3182fe75","toSide":"left"},
		{"id":"f847b61d08e609c2","fromNode":"b78a87ba3182fe75","fromSide":"right","toNode":"68f56370b7d9402c","toSide":"left"},
		{"id":"c00a271da9bb7cd2","fromNode":"68f56370b7d9402c","fromSide":"right","toNode":"eb7e5b4e8f98a5d0","toSide":"left"},
		{"id":"93d39ec40c90ddb8","fromNode":"68f56370b7d9402c","fromSide":"right","toNode":"6069e71d4f720a33","toSide":"left"},
		{"id":"7dc6c8d7210e3bd1","fromNode":"3fbf59659a54d33f","fromSide":"right","toNode":"0dabfce3bfa0b1b0","toSide":"left"},
		{"id":"3a920933ff8766bf","fromNode":"0dabfce3bfa0b1b0","fromSide":"right","toNode":"0b30e1faa23d51e9","toSide":"left"},
		{"id":"ba21cde5e65e6b7e","fromNode":"0dabfce3bfa0b1b0","fromSide":"top","toNode":"7f75b04eaa851084","toSide":"left"},
		{"id":"21ba276626d4ab8f","fromNode":"0b30e1faa23d51e9","fromSide":"right","toNode":"242c37178ca3dc48","toSide":"left"},
		{"id":"dd0a711177d3b677","fromNode":"0028cd2829dcbada","fromSide":"top","toNode":"d51cd5c1ff16fedb","toSide":"left"},
		{"id":"f47122a7cac5243a","fromNode":"0028cd2829dcbada","fromSide":"right","toNode":"fd4dffac52cc8abc","toSide":"left"}
	]
}